SIMPLE REGRESSION MODEL------------------------------------------------------------------------------------------------------------------>>>>>>

OK, my friends, so we just cover the data processing part and we cover it in Fleshlight thanks to

our data processing template, and now we were about to really build and train the simple our regression

model on the train instead, of course.

Right.

Remember that we split it.

The data sets into the training set and it set the training set will be used to train our sample in

a regression model and the test will be used to evaluate it.

So now we have to start with the training.

And so there we go.

Let's create a new code cell and let's implement the very simple linear regression model.

All right.

So the first thing we'll have to do is to import the right class with which we're going to build this

simple linear regression model, because indeed, we could either implement it from scratch or we could

use libraries.

And of course, we're going to use libraries because I want to provide very clear code templates, which

allows you to build any simple in a regression models and a flashlight.

And this library that we're going to use is Saikat.

Learn from which we're going to get access to a certain module called linear model.

And from this module, we're going to call a certain class called linear regression and are simple linear

regression model, which we're going to build will be exactly an instance of this class.

Right?

It will be an object of this class.

All right.

So let's do this.

Let's start by importing from, you know, from the Saikat Learn Library, which has the code name České

Learn so from a scalar.

And then, as we said, we're going to get access to a certain module.

So we have to add a dot here and which is a linear model.

And from this linear model of the cyclone library, well, we're going to import that linear regression

class.

Exactly this one, linear regression.

And then, as we said, this simple linear regression model, which we're going to build will be an

instance or an object of this linear regression class.

And therefore, here we have to create a new horrible, which will be exactly this instance of the linear

regression class.

And we're going to call this object, we can call it by any name, but we're going to call it regressive

because indeed we are doing right now regression.

Right.

I remind the big difference between regression and classification regression is when you have to predict

a continuous real value, like a salary, as we're about to do.

And classification is when you have to predict a category or, you know, a class, which we will do

in part three classification.

All right.

So regressive.

That's a new variable, which at the same time will become the object of the linear regression class.

And you can exactly see this object as the linear regression model itself.

You know, I remind that a class allows you to implement a couple of instructions to build something.

And, well, this linear regression class built exactly the simple linear regression model.

All right.

So you have to see this regression or object as exactly this model.

Right.

Is a regression then to create an object of a class where there is nothing more simple.

You just have to call the class itself a linear regression and then add some parentheses and that's

it.

Usually there are some parameters inside that we can implement, but here you don't have to enter anything.

This will just create a simple in a regression model.

And it is so simple that usually we don't have to play too much with the parameters.

All right.

And that line of code directly creates the simple linear regression model.

And that's only the building part.

You know, we actually get a model, but now, of course, we have to train it on the training set and

therefore we have to connected in some way to the training set and the action or, you know, the function

that connects it in order to train it is called the fit function.

And that's exactly our next step here to proceed to the training.

Remember this because you know, this is your first machinery model.

So this is the first time you're going to use this method and then you're going to see you're going

to use it all the time, whether you're going to do neural networks or anything in artificial intelligence.

The method that we're going to use to train our regression model is the fit method.

And how do we call such a method?

Well, first we have to take the object itself, regress and then added that and then add the method

itself, which is fit and add some parentheses.

So as a reminder of the fit method, here is a method of the linear regression class.

And I remind also that a class indeed has a couple of not only instructions, but also tools.

And these tools are called the method.

And these tools complete some actions, like training a model on the certain training sets or predicting

some future results, you know, on the test set.

So that's the first method.

And you'll see that.

Then we'll use another method.

All right.

So basically, this method will train this regression model, the simple linear regression model on

the.

Training said, and now, as you might guess, the only thing that's missing here and that we have to

enter in the fit method is, of course, the training set itself.

However, we have to enter it in a certain way because the fit method expects a certain format of the

training set in.

This format is, of course, you know, the couple of X train and we train.

Right.

I remind that Ekstrand contains the features, you know, the independent variables of the training

set and Y train contains the dependent variable vector of the training set as well.

And the fit method here expect exactly the training set in this format with first the matrix of features

X train and second, the dependent variable vector X train.

And why train just like that.

All right.

So now what I suggest is that we run all the cells because we haven't run any cells so far.

So we're going to do it because indeed, when we were going to run the cells, something will happen

in the output.

So let's see.

First we have to import the libraries where we import non-pay and Pender's.

Then we importante the data set, make sure to have it uploaded in CoLab.

Then step three, we were going to split the do certain things that Ed said.

So there we go.

Now we have extra an excess sweater and white test.

And since we have Ekstrand and we train well, we can now train the simple in a regression model on

the training set by calling this fit method taken from the or object of the linear regression class.

Here we go.

Let's play the cell.

And as I told you, there is something in the output that's just to say that indeed the linear regression

model is created and that's the default parameters.

You don't have to worry about them.

But there you go.

Congratulations.

You actually built and trained your very first machinery model.

I'm super excited for you.

I remember how excited I was the first time I did this.

So there you go.

I know the feeling, but be aware of my friends that this is the first, but definitely not the last

machinery model that you're going to build.

We're going to build many others more complex, of course, and for any types of applications.

So, you know, by the end of this course, you will know how to do anything in machine learning.

And that's why we really want to provide code templates for you to be efficient on how to play with

them.

OK, so congratulations again.

Now we're going to proceed to the next step, predicting the test results.

And for this, we're going to use a new method.

And so now I would like you to take action.

I would like you to try to predict the test results before we do it together.

And I'm going to give you a little hint, even if you can look at it online.

Well, the method that you have to use to predict new observations is the predictive method as simple

as that.

You know, they chose some simple terms.

So there you go.

Try to implement that before me, that your little exercise here and we will implement the solution

together in the next tutorial.